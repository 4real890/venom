name: Update nightly release

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *' 

jobs:
  update-nightly-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          registry-url: 'https://registry.npmjs.org'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Setup npm cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci --no-progress || npm install --no-progress
      - name: Lint source
        run: npm run lint
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          PUPPETEER_SKIP_DOWNLOAD: true

      - name: Update info.txt
        run: |
          commit=$(git log --format="%H" -n 1)
          date=$(git log --format="%cd" -n 1 --date=format:'%Y-%m-%dT%H:%M:%SZ')
          author=$(git config user.name)
          echo -e "ref: ${{ github.ref }}\ncommit: $commit\nauthor: $author\ndate: $date" >> build/libs/info.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nightly-build
          path: build/libs/

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly
          release_name: Nightly Build
          body: Automated nightly build for branch ${{ github.ref }}
          draft: false
          prerelease: true
          
      - name: Attach Artifacts to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/
          asset_name: nightly-build
          asset_content_type: application/zip
